title Purchase

actor User
participant "**//Tranzila//**\nPaymentSystem" as PaymentSystem
participant ActionManager
participant PurchaseAction
participant UserManagementSystem
participant ShoppingCart
participant OrdersSystem
database OrdersRepository

activate UserManagementSystem
activate ShoppingCart
activate OrdersRepository

autoactivation on
User->ActionManager:execute(Purchase)
ActionManager->PurchaseAction:new
ActionManager<--PurchaseAction:
ActionManager->PurchaseAction:execute
PurchaseAction->UserManagementSystem:isPermitted(this.getType)
PurchaseAction<--UserManagementSystem:true/false

group #2f2e7b isPermitted #white [false]
autoactivation off
PurchaseAction-#redxPurchaseAction:actionResponse = IllegalAction.\nRegistration Needed
autoactivation on
end
group #2f2e7b isPermitted #white [true]
PurchaseAction->ShoppingCart:getItems()
PurchaseAction<--ShoppingCart:items<Item, count>
note over PurchaseAction:calculate sum to charge customer\nbased on selected items
PurchaseAction->PaymentSystem:debit(sum)
note over User,PaymentSystem:Tranzila system\ncharges the user
PurchaseAction<--PaymentSystem:paymentId (or negative\nnumber for cancellation)
group if paymentId >= 0
PurchaseAction->UserManagementSystem:getLoggedInUser()
PurchaseAction<--UserManagementSystem:userDetails
PurchaseAction->OrdersSystem:purchase(userDetails, items)
OrdersSystem->OrdersRepository:saveOrder
OrdersSystem<--OrdersRepository:orderId
PurchaseAction<--OrdersSystem:orderId
autoactivation off
PurchaseAction->ShoppingCart:clear
note over PurchaseAction,ShoppingCart:Clear purchased items so we will not add them\nback to ItemsWarehouse when freeing resources
autoactivation on
end
end
ActionManager<--PurchaseAction:actionResponse\n  (success/fail)
User<--ActionManager:actionResponse to \nshow order status
destroy PurchaseAction