title Purchase

actor User
participant ActionManager
participant PurchaseAction
participant UserManagementSystem
participant ShoppingCart
participant OrdersSystem
database OrdersRepository

activate UserManagementSystem
activate ShoppingCart
activate OrdersRepository

autoactivation on
User->ActionManager:execute(Purchase)
ActionManager->PurchaseAction:new
ActionManager<--PurchaseAction:
ActionManager->PurchaseAction:execute
PurchaseAction->UserManagementSystem:isPermitted(this.getType)
PurchaseAction<--UserManagementSystem:true/false

group #2f2e7b isPermitted #white [false]
autoactivation off
PurchaseAction-#redxPurchaseAction:actionResponse = IllegalAction.\nRegistration Needed
autoactivation on
end
group #2f2e7b isPermitted #white [true]
PurchaseAction->ShoppingCart:getItems()
PurchaseAction<--ShoppingCart:items<Item, count>
PurchaseAction->OrdersSystem:purchase(userDetails, items)
OrdersSystem->OrdersRepository:saveOrder
OrdersSystem<--OrdersRepository:orderId
PurchaseAction<--OrdersSystem:orderId
end
ActionManager<--PurchaseAction:actionResponse\n  (success/fail)
User<--ActionManager:actionResponse to \nshow order status
destroy PurchaseAction